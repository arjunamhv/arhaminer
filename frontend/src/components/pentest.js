import { useState } from "react";

function Pentest() {
  const [domainforns, setDomainforns] = useState("");
  const [domainforsub, setDomainforsub] = useState("");
  const [dnsResult, setDnsResult] = useState(null);
  const [subdomainResult, setSubDomainResult] = useState(null);
  const [isMutating, setIsMutating] = useState(false);

  const handleNslookup = async () => {
    setIsMutating(true);
    try {
      const response = await fetch("http://localhost:5000/nslookup", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ domain: domainforns }),
      });
      const jsonData = await response.json();
      setDnsResult(jsonData);
    } catch (error) {
      console.error("Error fetching DNS lookup:", error);
    }
    setIsMutating(false);
  };
  const handleSubDomain = async () => {
    setIsMutating(true);
    try {
      const response = await fetch("http://localhost:5000/subdomains", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ domain: domainforsub }),
      });
      const jsonData = await response.json();
      setSubDomainResult(jsonData);
    } catch (error) {
      console.error("Error fetching DNS lookup:", error);
    }
    setIsMutating(false);
  };

  return (
    <div>
      <h1>Domain Scanner</h1>
      <div id="nslookup">
        <div className="mb-3">
          <label htmlFor="domainforns" className="form-label">
            Domain:
          </label>
          <input
            type="text"
            id="domainforns"
            className="form-control"
            value={domainforns}
            onChange={(e) => setDomainforns(e.target.value)}
          />
        </div>
        {!isMutating ? (
          <button className="btn btn-danger" onClick={handleNslookup}>
            DNS Lookup
          </button>
        ) : (
          <button disabled className="btn btn-danger placeholder-wave">
            Loading...
          </button>
        )}
        {dnsResult && (
          <div>
            <h2>DNS Lookup Result:</h2>
            <pre>{JSON.stringify(dnsResult, null, 2)}</pre>
          </div>
        )}
      </div>

      <br />
      <div id="subdomain">
        <div className="mb-3">
          <label htmlFor="domainforsub" className="form-label">
            Domain:
          </label>
          <input
            type="text"
            id="domainforsub"
            className="form-control"
            value={domainforsub}
            onChange={(e) => setDomainforsub(e.target.value)}
          />
        </div>
        {!isMutating ? (
          <button className="btn btn-danger" onClick={handleSubDomain}>
            Subdomain lookup
          </button>
        ) : (
          <button disabled className="btn btn-danger placeholder-wave">
            Loading...
          </button>
        )}

        {subdomainResult && (
          <div>
            <h2>Subdomain Lookup Result:</h2>
            <pre>{JSON.stringify(subdomainResult, null, 2)}</pre>
          </div>
        )}
      </div>
      
    </div>
  );
}

export default Pentest;
